// Firebase Security Rules for Firestore
// Copy-paste these rules in Firebase Console -> Firestore Database -> Rules tab

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - allow authenticated users to read/write
    match /users/{userId} {
      allow read, write: if request.auth != null;
    }
    
    // Admin users collection - allow authenticated users to read/write
    match /adminUsers/{userId} {
      allow read, write: if request.auth != null;
    }
    
    // Students collection - allow read/write for demo
    match /students/{studentId} {
      allow read, write: if true; // For development - make secure later
    }
    
    // Daily entries collection (note: matches code's COLLECTIONS.DAILY_ENTRIES = 'dailyEntries')
    match /dailyEntries/{entryId} {
      allow read, write: if true; // For development - make secure later
    }
    
    // Admin dashboard data
    match /adminData/{document=**} {
      allow read, write: if true; // For development - make secure later
    }
    
    // Catch-all for development - allow everything
    match /{document=**} {
      allow read, write: if true; // For development - make secure later
    }
  }
}

// Production-ready rules would look like:
/*
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Only authenticated users can access their own data
    match /students/{studentId} {
      allow read, write: if request.auth != null && request.auth.uid == studentId;
    }
    
    match /dailyEntries/{entryId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.studentId;
    }
    
    // Only admin users can access admin data
    match /adminData/{document=**} {
      allow read: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
*/
